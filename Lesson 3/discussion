I found this Module and this exercise very challenging this week.Â  I wanted to wait to answer this Discussion question until I felt like I really had a handle on recursion so that my input would be useful. However, after going through the provided readings and doing the assignments,I am still struggling. 


I'm not sure what performance means in this context: I'm going to assume it means the amount of time it takes for the program to run and/or O-notation.

Below is an iterative function that computes the Fibonacci Squence:

def fibonacciloop(number):
    print("fibonacci evaluation of: {0}".format(numbertoevaluate))
    if number == 0:
        return 0
    if number == 1:
        return 1

    sequence = [0, 1]#Always starts with 0 and 1
    
    for i in range(2,number+1):
       sequence.append(sequence[i-1] + sequence[i-2])#Add the previous two elements together, then append their sum to the list.
    
    print("Fibonacci Sequence: ", sequence)

    return sequence[number]
    

numbertoevaluate = 10
fibonacciloop(numbertoevaluate)

